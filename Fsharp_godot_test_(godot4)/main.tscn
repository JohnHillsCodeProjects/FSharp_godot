[gd_scene load_steps=2 format=3 uid="uid://cnumqfk01vaga"]

[ext_resource type="Script" path="res://main.cs" id="1_4hfi1"]

[node name="main" type="Label"]
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
offset_left = 12.0
offset_top = 9.0
offset_right = -272.0
offset_bottom = -197.0
grow_horizontal = 2
grow_vertical = 2
scale = Vector2(1.3, 1.3)
text = "Press 1 to view a scene with just C# code

Press 2 to view a scene where C# code imports F# code

How to get C# code to import and run F# functions (a step by step guide):
1. Attach a C# script to a node (you don't necessarily have to run F# code on that node, any C# script will do) 
2. Build the solution for the project and open that solution file in Visual Studio.
3. Create a new F# library project inside the project solution (recommened that you place the library inside a 
seperate folder in the godot folder). Ensure that it is using .NET Framework 4.6 since Godot does not support 4.7.
4. Add a project reference in the C# project to the F# library 
(Optional: Install the GodosSharp package if you want to interface with Godot directly from the F# code.

Now you can reference any F# function you write in the source files in the F# library project can be referenced
in the C# code files you write.

POTENTIAL ERROR: The project may be throwing an error that the version of FSharpCore that gets loaded is
incompatable. If this happens, the solution I found was to roll it back to version 4.6 and the error was resolved."
script = ExtResource("1_4hfi1")
